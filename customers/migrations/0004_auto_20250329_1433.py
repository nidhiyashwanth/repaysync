# Generated by Django 5.1 on 2025-03-29 09:03

from django.db import migrations, models
import django.db.models.deletion
from django.conf import settings
import django.core.validators


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('customers', '0003_alter_customerassignment_unique_together_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='', max_length=50, verbose_name='first name')),
                ('last_name', models.CharField(default='', max_length=50, verbose_name='last name')),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], default='MALE', max_length=10, verbose_name='gender')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('national_id', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='national ID')),
                ('primary_phone', models.CharField(default='', max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='primary phone')),
                ('secondary_phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='secondary phone')),
                ('email', models.EmailField(blank=True, max_length=254, validators=[django.core.validators.EmailValidator()], verbose_name='email address')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='address')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='state/province')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='postal code')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='country')),
                ('employer', models.CharField(blank=True, max_length=255, verbose_name='employer')),
                ('job_title', models.CharField(blank=True, max_length=100, verbose_name='job title')),
                ('monthly_income', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='monthly income')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('risk_score', models.IntegerField(blank=True, null=True, verbose_name='risk score')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_officer', models.ForeignKey(blank=True, limit_choices_to={'role': 'COLLECTION_OFFICER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_customers', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_customers', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_customers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'customer',
                'verbose_name_plural': 'customers',
                'ordering': ['last_name', 'first_name'],
                'indexes': [models.Index(fields=['primary_phone'], name='customers_c_primary_c976f4_idx'), models.Index(fields=['national_id'], name='customers_c_nationa_10c874_idx'), models.Index(fields=['last_name', 'first_name'], name='customers_c_last_na_27dbcc_idx')],
            },
        ),
    ]
